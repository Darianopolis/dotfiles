--------------------------------------------------------------------------------
--                         Initial environment setup
--------------------------------------------------------------------------------

$ loadkeys uk
$ timedatectl

--------------------------------------------------------------------------------
--                               Drive setup
--------------------------------------------------------------------------------

-- Also `cgdisk` for a graphical setup

$ lsblk
$ fdisk /dev/nvme0n1
  g
  n
  Enter *2
  +1G
  t
  1
  n
  Enter *3
$ mkfs.fat -F32 /dev/nvme0n1p1
$ mkfs.ext4 /dev/nvme0n1p2

--------------------------------------------------------------------------------
--                              Bootstrap Arch
--------------------------------------------------------------------------------

$ mount /dev/nvme0n1p2 /mnt
$ mount --mkdir /dev/nvme0n1p1 /mnt/boot
$ pacstrap -K /mnt base base-devel linux linux-headers linux-firmware amd-ucode nano
$ genfstab -U /mnt >> /mnt/etc/fstab

--------------------------------------------------------------------------------
--                               Networking 1
--------------------------------------------------------------------------------

$ networkctl
! Find network adapter name in use (E.g. `eno1`)
$ sudo nano /mnt/etc/systemd/network/20-wired.network
```
[Match]
Name=%NAME_FOUND_ABOVE%

[Network]
DHCP=yes
```

$ arch-chroot /mnt

--------------------------------------------------------------------------------
--                              Core packages
--------------------------------------------------------------------------------

> /etc/pacman.conf
! Uncomment `ParallelDownloads` and set to 16
ParallelDownloads = 16

$ pacman -S grub efibootmgr sudo wget vim nano less tldr git pass flatpak

--------------------------------------------------------------------------------
--                      Configure locale persistently
--------------------------------------------------------------------------------

$ ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
$ systemctl enable systemd-timesyncd.service
$ hwclock --systohc

$ echo "en_US.UTF-8 UTF-8
  en_GB.UTF-8 UTF-8" > /etc/locale.gen
$ locale-gen
$ echo "LANG=en_GB.UTF-8" > /etc/locale.conf
$ echo "KEYMAP=uk" > /etc/vconsole.conf

--------------------------------------------------------------------------------
--                              GRUB Bootloader
--------------------------------------------------------------------------------

$ grub-install --target=x86_64-efi --efi-directory=/boot bootloader-id=GRUB
-- We'll mkconfig later before rebooting

--------------------------------------------------------------------------------
--                                 Swapfile
--------------------------------------------------------------------------------

$ mkswap -U clear --size 16G --file /swapfile
> /etc/fstab
! Add the following line:
/swapfile none swap defaults 0 0

--------------------------------------------------------------------------------
--                               Systemd logs
--------------------------------------------------------------------------------

$ mkdir /etc/systemd/journald.conf.d
> /etc/systemd/journald.conf.d/10-maxsize.conf
[Journal]
SystemMaxUse=100M

-- Restart journald if editing at runtime
-- $ sudo systemctl restart systemd-journald

--------------------------------------------------------------------------------
--                                  Users
--------------------------------------------------------------------------------

$ passwd
  ...

$ useradd -m -g users -G wheel -s /bin/bash USERNAME
$ passwd USERNAME
  ...

$ visudo
  Uncomment:
  %wheel ALL=(ALL:ALL): ALL

# Reduce lockout time to 5s
> /etc/security/faillock.conf
! Change `# unlock_time = 600` to `unlock_time = 5`

--------------------------------------------------------------------------------
--                               Networking 2
--------------------------------------------------------------------------------

$ echo "HOSTNAME" > /etc/hostname
$ systemctl enable systemd-networkd.service
$ systemctl enable systemd-resolved.service
$ sudo ln -fs /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
  !! This needs to be run after rebooting!

--------------------------------------------------------------------------------
--                          SysRq shortcut Enable
--------------------------------------------------------------------------------

echo "kernel.sysrq=1" > /etc/sysctl.d/99-sysctl.conf

--------------------------------------------------------------------------------
--                           Setup yay AUR helper
--------------------------------------------------------------------------------

$ git clone https://aur.archlinux.org/yay.git
$ cd yay
$ makepkg -si
$ cd ..
$ rm -rf yay

--------------------------------------------------------------------------------
--                  Enable multilib for 32 bit applications
--------------------------------------------------------------------------------

$ sudo nano /etc/pacman.conf
-- Uncomment the following
  [multilib]
  Include = /etc/pacman.d/mirrorlist
$ pacman -Syu

--------------------------------------------------------------------------------
--                               NVIDIA drivers
--------------------------------------------------------------------------------

-- Remove old drivers if necessary
$ yay -Rd --nodeps ...
-- `--nodeps` is used so Steam doesn't complain about having its dependencies removed.

$ sudo pacman -S nvidia-open-dkms nvidia-utils lib32-nvidia-utils egl-wayland

> /etc/default/grub
-- add `nvidia_drm.modeset=1 nvidia.NVreg_PreserveVideoMemoryAllocations=1 nvidia.NVreg_TemporaryFilePath=/tmp nvidia.NVreg_UsePageAttributeTable=1` to the end of `GRUB_CMDLINE_LINUX_DEFAULT=`
  GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet nvidia_drm.modeset=1 nvidia.NVreg_PreserveVideoMemoryAllocations=1 nvidia.NVreg_TemporaryFilePath=/tmp nvidia.NVreg_UsePageAttributeTable=1"

-- TODO: What about `nvidia_drm.fbdev=1`? Causes black screen when launching KDE Plasma in Wayland

-- GRUB_GFXMODE=1920x1080x32
-- GRUB_GFXPAYLOAD_LINUX=3840x2160x32

> /etc/mkinitcpio.conf
-- add `nvidia nvidia_modeset nvidia_uvm nvidia_drm` to MODULES
  MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)

-- remove `kms` from `HOOKS` as per https://wiki.archlinux.org/title/NVIDIA > Installation > Step 5
-- (this avoids dragging in the nouveau module just to be blacklisted later anyway)
-- E.g BEFORE removal: HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block filesystems fsck)
  HOOKS=(base udev autodetect microcode modconf keyboard keymap consolefont block filesystems fsck)

$ sudo systemctl enable nvidia-suspend.service
$ sudo systemctl enable nvidia-resume.service

-- VAAPI -> NVDEC video encode/decode translation layer
-- https://wiki.archlinux.org/title/Hardware_video_acceleration
--  +-> https://github.com/elFarto/nvidia-vaapi-driver/?tab=readme-ov-file#installation

$ sudo pacman -S libva-nvidia-driver
> /etc/environment
MOZ_DISABLE_RDD_SANDBOX=1
LIBVA_DRIVER_NAME=nvidia

--------------------------------------------------------------------------------
--                                  Reboot
--------------------------------------------------------------------------------

$ sudo grub-mkconfig -o /boot/grub/grub.cfg
$ sudo mkinitcpio -P
$ exit
$ reboot

--------------------------------------------------------------------------------
--                                 Pipewire
--------------------------------------------------------------------------------

$ sudo pacman -S pipewire lib32-pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack

--------------------------------------------------------------------------------
--                                 GPG Keys
--------------------------------------------------------------------------------

$ sudo pacman -S pass
$ gpg --gen-key
$ gpg --export-secret-keys | gpg2 --import
$ pass init <gpg-id>
! <gpg-id> is the long string of characters from the key as shown by `gpg --list-keys`

--------------------------------------------------------------------------------
--                            Git Credential Manager
--------------------------------------------------------------------------------

-- Replace 2.5.0 with current latest version
$ curl -OL https://github.com/git-ecosystem/git-credential-manager/releases/download/v2.5.0/gcm-linux_amd64.2.5.0.tar.gz
$ sudo tar -xvf gcm-linux_amd64.2.5.0.tar.gz -C /usr/local/bin
$ rm gcm-linux_amd64.2.5.0.tar.gz

$ git-credential-manager configure
$ git config --global credential.credentialStore cache
$ git config --global credential.cacheOptions "--timeout 86400"
$ git config --global core.editor "vim"
$ git config --global user.name "NAME"
$ git config --global user.email "EMAIL"

--------------------------------------------------------------------------------
--                               XDG Desktop
--------------------------------------------------------------------------------

$ sudo pacman -S xdg-desktop-portal-kde xdg-desktop-portal-gtk plasma-meta xorg-xinit kwalletmanager

--------------------------------------------------------------------------------
--                               Packages
--------------------------------------------------------------------------------

[Preferences]

  1 Flathub verified (if GUI application)
    - Exceptions:
      - KDE Flatpak apps break desktop integrations
  2 Arch package
  3 Flathub unverified / AUR package

[Devices]

  USB:            evtest joyutils (AUR)game-devices-udev              USB Testing Utilties
  Piper:          piper libratbag                                     Gaming Mouse Control

[Desktop Environment]

  KDE Plasma:     plasma-meta xdg-desktop-portal-gtk xorg-xinit       Desktop environment
                  kwalletmanager system-config-printer cups cups-pdf
  KeePassXC:      (flathub:verified)org.keepassxc.KeePassXC           Secret storage
  Flameshot:      (flathub)org.flameshot.Flameshot                    Screenshot tool
  Fonts:          otf-firamono-nerd                                   Fonts

[Applications]

  Terminal:       kitty fastfetch starship                            Terminal
  VS Code:        (AUR)visual-studio-code-bin wmctrl xorg-xprop       VS Code (aur package for `code` command and executable permissions)

  1Password:      (AUR)1password                                      1Password GUI
  ExpressVPN:     (AUR)expressvpn                                     ExpressVPN CLI

  Mission Center: (flathub:verified)io.missioncenter.MissionCenter    Resource monitor
  Dolphin:        dolphin                                             File Manager
  Text Editor:    (flathub:verified)org.gnome.TextEditor              Text Editor
  Calculator:     (flathub:verified)org.gnome.Calculator              Calculator

  Flatseal:       (flathub:verified)com.github.tchx84.Flatseal        Flatpak permission management
  Gear Lever:     (flathub:verified)it.mijorus.gearlever              AppImage manager
    TODO: Move to a manager with comand line controls

  qBittorrent     (flathub:verified)org.qbittorrent.qBittorrent       Torrent GUI

  Firefox         firefox                                             Browser
  Brave:          (flathub:verified)com.brave.Browser                 Browser

  YouTube Music:  (AUR)youtube-music-bin                              Music Player
  Spotify:        (flathub)com.spotify.Client                         Music Player
  VLC:            vlc                                                 Video player
  NewsFlash:      (flathub:verified)io.gitlab.news_flash.NewsFlash    RSS Client

  Discord:        (flathub:verified)com.discordapp.Discord            Discord

  OBS:            (flathub:verified)com.obsproject.Studio             Recording + Streaming
  Krita:          (flathub:verified)org.kde.krita                     Paint (heavy duty)
  Pinta:          (flathub:verified)com.github.PintaProject.Pinta     Paint (lightweight)
  GIMP:           (flathub:verified)org.gimp.GIMP                     Photo editing
  Inkscape:       inkscape                                            2D Vector Design
  Blender:        blender                                             3D Modelling

[Games - Generic]

  Steam:           steam                                              Steam
  MangoHUD:        mangohud                                           Vulkan Performance overlay
  Lutris:          (flathub:verified)net.lutris.Lutris                Wine/Proton application manager
  Bottles:         (flathub:verified)com.usebottles.bottles           Wine/Proton application manager

[Games - Specific]

  Prism Launcher:  (flathub:verified)org.prismlauncher.PrismLauncher  Minecraft Launcher
  OSU:             (flathub)sh.ppy.osu                                OSU

--------------------------------------------------------------------------------
--                                Printing
--------------------------------------------------------------------------------

-- Hardware specific drivers package (needed for Epson ET-8550)
$ yay -S epson-inkjet-printer-escpr2

$ systemctl enable --now cups.service

--------------------------------------------------------------------------------
--                               Development
--------------------------------------------------------------------------------

$ sudo pacman -S cmake ninja meson go
$ go install github.com/boyter/scc@master

--------------------------------------------------------------------------------
--                            Vulkan Development
--------------------------------------------------------------------------------

$ sudo pacman -S vulkan-devel renderdoc

-- Vulkan Caps Viewer
$ curl -L -o vulkanCapsViewer.AppImage https://vulkan.gpuinfo.org/downloads/vulkancapsviewer_3.40_linux64_wayland.AppImage
$ chmod +x vulkanCapsViewer.AppImage
$ sudo mv vulkanCapsViewer.AppImage /usr/local/bin/vulkanCapsViewer.AppImage
> /usr/share/applications/vulkancapsviewer.desktop
```
[Desktop Entry]
Encoding=UTF-8
Type=Application
Name=Vulkan Caps Viewer
Comment=Vulkan Hardware Capability Viewer
Exec=/usr/local/bin/vulkanCapsViewer.AppImage
Terminal=false
StartupNotify=false
Categories=Application;Graphics;Development;
X-AppImage-Version=wayland
```

--------------------------------------------------------------------------------
--                            Mouse Accel Drivers
--------------------------------------------------------------------------------

-- https://github.com/Gnarus-G/maccel
-- Verify install.sh to make sure it hasn't been tampered with!

$ cd /var/tmp
$ curl -OL https://www.maccel.org/install.sh
$ sudo MACCEL_LEETMOUSE_HID_PARSER=1 sh install.sh
$ sudo usermod -aG maccel USERNAME

$ sudo maccel set sens-mult 0.5
$ sudo maccel set accel 0.075
$ sudo maccel set offset 2

$ sudo maccel bindall

IMPORTANT: *reinstall* before booting into updated kernel or you will break mouse input

-- Uninstall with: $ sh /opt/maccel/uninstall.sh

--------------------------------------------------------------------------------
--                           Wooting Keyboard Setup
--------------------------------------------------------------------------------

-- https://help.wooting.io/article/147-configuring-device-access-for-wootility-under-linux-udev-rules

> /etc/udev/rules.d/70-wooting.rules
```
# Wooting One Legacy
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff01", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff01", TAG+="uaccess"

# Wooting One update mode
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2402", TAG+="uaccess"

# Wooting Two Legacy
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff02", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff02", TAG+="uaccess"

# Wooting Two update mode
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2403", TAG+="uaccess"

# Generic Wootings
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="31e3", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="31e3", TAG+="uaccess"
```
$ sudo udevadm control --reload-rules && sudo udevadm trigger

TODO: Check if "mouse" device was causing menu issues in Elite Dangerous - "Wooting Wooting Two HE (ARM) Mouse"

--------------------------------------------------------------------------------
--                                KDE Plasma
--------------------------------------------------------------------------------

> ~/plasma
  #!/bin/bash
  /usr/lib/plasma-dbus-run-session-if-needed /usr/bin/startplasma-wayland
$ chmod +x ~/plasma
> ~/xplasma
  #!/bin/bash
  startx /usr/bin/startplasma-x11
$ chmod +x ~/xplasma

--------------------------------------------------------------------------------
--                            KDE Plasma GUI Tweaks
--------------------------------------------------------------------------------

$ echo "pinentry-program /usr/bin/pinentry-qt5" > ~/.gnupg/gpg-agent.conf
$ echo RELOADAGENT | gpg-connect-agent
-- see also <https://d.sb/2016/11/gpg-inappropriate-ioctl-for-device-errors>

KDE System Settings
  Input & Output
    Mouse & Touchpad
      Mouse
        Device
          Wooting Two HE (ARM) Consumer Control
            Device Enabled:       True -- IMPORTANT: If you disable this, media keys don't work
          Wooting Two HE (ARM) Mouse
            Device Enabled:       False
          MOUSE DEVICE
            Device Enabled:       True
            Pointer speed:        0.2
            Pointer acceleration: None
      Screen Edges
        Screen TopLeft:                       None
        Tile Windows dragged to left or edge: No
        Edge barrier:                         0 px
    Keyboard
      Keyboard
        Layouts
          Configure Layouts:  Yes
          + Add:              English (UK)
      Shortcuts
        KRunner:  Ctrl+Alt+Space
        Kitty:    Meta+X
    Accessibility
      Shake Cursor: Disable
  Appearance & Style
    Colours & Themes
      Global Theme: Breeze Dark
  Apps & Windows
    Window Management
      KWin Scrips
        KZones
          Layouts
            Copy contents of ./kde/kzones.layout.json
          General
            Enable Zone Selector: Disabled
            Snapping Behaviour
              Remember and restore window geometries: Disable
  Workspace
    General Behaviour
      Animation Speed:  Instant
    Search
      Plasma Search
        Configure KRunner
          Position on screen: Centre
  Security & Privacy
    Screen Locking
      Lock screen automatically:    Never
      Lock after waking from sleep: Disable
    KDE Wallet
      Enable the KDE wallet subsystem:  Disable
  System
    Power Management
      Suspend Session
        After a period of inactivity: Do Nothing
      Display and Brightness
        Dim automatically:            Never
        Turn of screen:               Never

-- TODO: Migrate all this to stored .config files
--       See <https://www.youtube.com/watch?v=toGaph9SVbg> for relevant `.config` files

--------------------------------------------------------------------------------
--                             Steam + Proton GE
--------------------------------------------------------------------------------

Steam Settings
  Interface
    Enable GPU accelerated rendering in web views:  Disabled
  Downloads
    Shader Pre-caching
      Enable Shader Pre-caching:  Disabled
  Compatibility
    Enable Steam Play for all other titles: Enabled

$ mkdir ~/.steam/root/compatibilitytools.d
! Download latest release from <https://github.com/GloriousEggroll/proton-ge-custom/releases>
$ tar -xf GE-Proton9.9.tar.gz -C ~/.steam/root/compatibilitytools.d/
! Restart Steam to udpate Proton versions

  [Euro Truck Simulator 2 Virtual Cursor Fix]

> ~/.local/share/Steam/steamapps/compatdata/227300/pfx/drive_c/users/steamuser/Documents/Euro\ Truck\ Simulator\ 2/config.cfg
uset i_virtual_cursor_speed "0"

--------------------------------------------------------------------------------
--                                ExpressVPN
--------------------------------------------------------------------------------

$ sudo systemctl enable --now expressvpn
$ expressvpn activate
$ expressvpn preferences set network_lock off
$ expressvpn connect

--------------------------------------------------------------------------------
--                       LLVM - clang, clangd, lldb, scc
--------------------------------------------------------------------------------

$ cd ~/dev/cloned
$ git clone https://github.com/llvm/llvm-project.git --recursive && cd llvm-project
$ mkdir build && cd build
$ cmake -G Ninja -DLLVM_ENABLE_PROJECTS="clang;lldb;clang-tools-extra" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ../llvm
$ ninja
$ sudo ninja install

--------------------------------------------------------------------------------
--                                 wlroots
--------------------------------------------------------------------------------

$ git clone https://gitlab.freedesktop.org/wlroots/wlroots.git &&
$ cd wlroots
! play package whackamole until everything is buildable
$ sudo pacman -S wayland-protocols seatd libliftoff xcb-util-errors
$ meson setup --reconfigure build/
$ ninja -C build
$ sudo ninja -C build/ install

--------------------------------------------------------------------------------
--                                 TODO
--------------------------------------------------------------------------------

Impproved bash prompt setup?
  https://www.youtube.com/watch?v=0phdCAFFicY&list=PLhJQdULc4pyWR-u84ATOcNdG72ynrzls3&index=8
  Find better alternative to blesh for bash auto suggestions

Set up AppImage manager
  - AM - https://github.com/ivan-hc/AM
  - AppMan - https://github.com/ivan-hc/AppMan
  - AppImageLauncher - https://github.com/TheAssassin/AppImageLauncher
  - Gear Lever - https://flathub.org/apps/it.mijorus.gearlever

Distro independent package managers
  - homebrew  (https://christitus.com/best-package-manager/)
  - Nix

Experiment with Wayfire?
  - wlr-randr
  - xdg-desktop-portal
  - xwaylandvideobridge
  - https://github.com/WayfireWM/wayfire/wiki/Tutorial

CoreSuite + PaperDE?
  https://cubocore.gitlab.io/index.html

Find program/daemons for
  - launching
    - Tofi
  - printing
  - quick sketches
    - https://wiki.archlinux.org/title/List_of_applications/Multimedia#Raster_graphics_editors
      - aur:corepaint
      - aur:milton-git
  - file selectors
    - Ranger (via xdg-desktop-portal-termfilechooser-git)
  - screenshot
  - media playback

Add scripts for switching between DE/WMs
  https://www.youtube.com/watch?v=6O6WBtchg_c
  repair-portals
    $ killall xdk-desktop-portal
    $ systemctl --user restart pipewire

Try out Whisper for software mic monitoring via pipewire
  - https://flathub.org/apps/it.mijorus.whisper

Bottles/Lutris get DX12 showing in games
  https://www.reddit.com/r/linux_gaming/comments/1dsasq8/world_of_warcraft_nvidia_no_dx12ray_tracing/
  https://forum.garudalinux.org/t/ray-tracing-in-wow/25874/5
  https://forum.garudalinux.org/t/dx12-is-not-supported-bottles-lutris-heroic-visual-c-runtime-required-steam-launcher-proton-ge/36806/49?page=3

Hardware video acceleration (VA-API)
  https://wiki.archlinux.org/title/Hardware_video_acceleration
    libva-nvidia-driver
    https://github.com/elFarto/nvidia-vaapi-driver/?tab=readme-ov-file#installation
  https://ubuntuhandbook.org/index.php/2021/08/enable-hardware-video-acceleration-va-api-for-firefox-in-ubuntu-20-04-18-04-higher/
