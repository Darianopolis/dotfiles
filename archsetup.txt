--------------------------------------------------------------------------------
--                         Initial environment setup
--------------------------------------------------------------------------------

$ loadkeys uk
$ timedatectl

--------------------------------------------------------------------------------
--                          Git Credential Manager
--------------------------------------------------------------------------------

curl -OL https://github.com/git-ecosystem/git-credential-manager/releases/download/gcm-linux_amd64.2.5.0.tar.gz
sudo tar -xvf gcm-linux_amd64.2.5.0.tar.gz -C /usr/local/bin
git-credential-manager configure
export GCM_CREDENTIAL_STORE=cache

--------------------------------------------------------------------------------
--                               Drive setup
--------------------------------------------------------------------------------

$ fdisk /dev/nvme0n1
  g
  n
  Enter *2
  +1G
  t
  1
  n
  Enter *3
$ mkfs.fat -F32 /dev/nvme0n1p1
$ mkfs.ext4 /dev/nvme0n1p2

--------------------------------------------------------------------------------
--                             Bootstrap Arch
--------------------------------------------------------------------------------

$ mount /dev/nvme0n1p2 /mnt
$ mount --mkdir /dev/nvme0n1p1 /mnt/boot
$ pacstrap -K /mnt base linux linux-firmware amd-ucode
$ genfstab -U /mnt >> /mnt/etc/fstab
$ arch-chroot /mnt

--------------------------------------------------------------------------------
--                         Install common packages
--------------------------------------------------------------------------------

$ pacman -S grub efibootmgr nano sudo

--------------------------------------------------------------------------------
--                      Configure locale persistently
--------------------------------------------------------------------------------

$ ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
$ hwclock --systohc

$ echo "en_US.UTF-8 UTF-8
  en_GB.UTF-8 UTF-8" > /etc/locale.gen
$ locale-gen
$ echo "LANG=en_GB.UTF-8" > /etc/locale.conf
$ echo "KEYMAP=uk" > /etc/vconsole.conf

--------------------------------------------------------------------------------
--                            GRUB Bootloader
--------------------------------------------------------------------------------

$ mount --mkdir /dev/nvme0n1p1 /mnt/boot
$ grub-install --target=x86_64-efi --efi-directory=/boot bootloader-id=GRUB
$ grub-mkconfig -o /boot/grub/grub.cfg

--------------------------------------------------------------------------------
--                                Users
--------------------------------------------------------------------------------

$ passwd
  ...

$ useradd -m -g users -G wheel -s /bin/bash darian
$ passwd
  ...

$ sudo nano /etc/sudoers
  Uncomment:
  %wheel ALL=(ALL:ALL) NOPASSWD: ALL

--------------------------------------------------------------------------------
--                            Networking Part 1
--------------------------------------------------------------------------------

$ echo "darian" > /etc/hostname
$ systemctl enable systemd-networkd.service
$ systemctl enable systemd-resolved.service

--------------------------------------------------------------------------------
--                          Reboot into install
--------------------------------------------------------------------------------

$ exit
$ shutdown -h now

--------------------------------------------------------------------------------
--                           Networking Part 2
--------------------------------------------------------------------------------

$ sudo ln -fs /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
$ sudo nano /etc/systemd/network/20-wired.network
  [Match]
  Name=%NameOfNetworkAdapterFrom`networkctl`
  
  [Network]
  DHCP=yes
$ networkctl reload

--------------------------------------------------------------------------------
--                         Setup yay AUR helper
--------------------------------------------------------------------------------

! <https://itsfoss.com/install-yay-arch-linux/>
$ sudo pacman -S base-devel git
$ git clone https://aur.archlinux.org/yay.git
$ cd yay
$ makepkg -si
$ cd ..
$ rm -rf yay

--------------------------------------------------------------------------------
--                 Enable multilib for 32 bit applications
--------------------------------------------------------------------------------

$ sudo nano /etc/pacman.conf
  Uncomment:
  [multilib]
  Include = /etc/pacman.d/mirrorlist

--------------------------------------------------------------------------------
--                           NVIDIA beta drivers
--------------------------------------------------------------------------------

-- Remove old drivers if necessary
$ sudo yay -Rd --nodeps nvidia-dkms nvidia-utils lib32-nvidia-utils
-- `--nodeps` is used so Steam doesn't complain about having its dependencies removed.

$ sudo yay -S nvidia-beta-dkms nvidia-utils-beta lib32-nvidia-utils-beta

-- See <https://wiki.hyprland.org/Nvidia/>
-- To fix wayland compositors crashing on launch

-- See<https://wiki.archlinux.org/title/NVIDIA/Tips_and_tricks#Preserve_video_memory_after_suspend>
-- To fix system corruption on sleep/resume

$ sudo pacman -S linux-headers egl-wayland
> /etc/default/grub
  add `nvidia_drm.modeset=1` to the end of `GRUB_CMDLINE_LINUX_DEFAULT=`

!!! Instead of the following modprobe.d stuff, try adding `nvidia.NVreg_PreserveVideoMemoryAllocations=1` to `GRUB_CMDLINE_LINUX_DEFAULT` as well 
!!! GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet nvidia_drm.modeset=1 nvidia.NVreg_PreserveVideoMemoryAllocations=1"

$ sudo grub-mkconfig -o /boot/grub/grub.cfg
? /etc/modprobe.d/nvidia.conf
  options NVreg_PreserveVideoMemoryAllocations=1
> /etc/mkinitcpio.conf
! add to `MODULES` and `FILES`:
  MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)
  FILES=(/etc/modprobe.d/nvidia.conf)
$ sudo mkinitcpio -P
$ sudo systemctl enable nvidia-suspend.service
$ sudo systemctl enable nvidia-hibernate.service
$ sudo systemctl enable nvidia-resume.service
$ reboot

--------------------------------------------------------------------------------
--                              Pipewire audio
--------------------------------------------------------------------------------

$ sudo pacman -S pipewire lib32-pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack

--------------------------------------------------------------------------------
--                                   KDE
--------------------------------------------------------------------------------

$ sudo pacman -S plasma-meta
-- TODO: Minimal plasma-desktop install?
-- Create a launch script
> ~/plasma
  #!/bin/bash
  /usr/lib/plasma-dbus-run-session-if-needed /usr/bin/startplasma-wayland
$ chmod +x ~/plasma

-- KZones: <https://github.com/SinanAkkoyun/kde-kzone>
! KWin Script > Get New > KZones
! KZones properties:
  ! Untick: `Remember and restore window geometries`
  ! Set layout to contents of <kzones.layout.json>

--------------------------------------------------------------------------------
--                             Common Flatpaks
--------------------------------------------------------------------------------

$ sudo pacman -S flatpak
$ sudo flatpak install flathub com.discordapp.Discord
$ sudo flatpak install flathub com.brave.Browser
$ sudo flatpak install flathub com.obsproject.Studio
$ sudo flatpak install flathub com.spotify.Client

--------------------------------------------------------------------------------
--                                 Browser
--------------------------------------------------------------------------------

! Add the following extensions
  1Password
  DeArrow - Better Titles and thumbnails
    Replace Thumbnails  - Unchecked (we remove them anyway)
    Title Format        - Disabled (unnecessary title reformatting clutters DeArrow flagged contents)
    Remove Emojis       - Ditto
  Enhancer for YouTube
  Hide YouTube Shorts
  Hide YouTube thumbnails
  Return YouTube Dislikes
  SponsorBlock for YouTube - Skip Sonsorships

--------------------------------------------------------------------------------
--                           USB Debugging Utilities
--------------------------------------------------------------------------------

$ sudo pacman -S evtest joyutils game-devices-udev
-- joyutils for `jstest`
-- TODO: Figure out why joysticks aren't accessible within xorg session

--------------------------------------------------------------------------------
--                           Wooting Keyboard Setup
--------------------------------------------------------------------------------

> /etc/udev/rules.d/70-wooting.rules
```
# Wooting One Legacy
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff01", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff01", TAG+="uaccess"

# Wooting One update mode
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2402", TAG+="uaccess"

# Wooting Two Legacy
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff02", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff02", TAG+="uaccess"

# Wooting Two update mode
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2403", TAG+="uaccess"

# Generic Wootings
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="31e3", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="31e3", TAG+="uaccess"
```
$ sudo udevadm control --reload-rules && sudo udevadm trigger

--------------------------------------------------------------------------------
--                             Steam + Proton GE
--------------------------------------------------------------------------------

$ sudo pacman -S steam
$ mkdir ~/.steam/root/compatibilitytools.d
! Download latest release from <https://github.com/GloriousEggroll/proton-ge-custom/releases>
$ tar -xf GE-ProtonVERSION.tar.gz -C ~/.steam/root/compatibilitytools.d/
! Restart Steam to udpate Proton versions

--------------------------------------------------------------------------------
--                               Setup Kitty
--------------------------------------------------------------------------------

-- https://starship.rs/

$ sudo pacman -S kitty fastfetch starship nerd-fonts
! Select firacode nerd font

! List available fonts
$ kitty +list-fonts --ps-names

! Kitty > Ctrl-Shift-F2 
! set font_family
  font_family FiraCode Nerd Font Mono Reg
  background #0a0a0a
  background_opacity 0.90

! Add `eval "$(starship init bash)"` to ~/.bashrc
! Add `fastfetch` to ~/.bashrc

-- Blesh auto suggestions <https://github.com/akinomyoga/ble.sh>
$ sudo pacman -S blesh
> ~/.blerc
  Copy contents from  <https://github.com/akinomyoga/ble.sh/blob/master/blerc.template>
! Add `source /usr/share/blesh/ble.sh` to ~/.bashrc

--------------------------------------------------------------------------------
--                                ExpressVPN
--------------------------------------------------------------------------------

$ yay -S expressvpn
$ sudo systemctl enable expressvpn
$ sudo systemctl start expressvpn
$ expressvpn activate
$ expressvpn connect

--------------------------------------------------------------------------------
--                                 1Password
--------------------------------------------------------------------------------

$ yay -S 1password

--------------------------------------------------------------------------------
--                   LLVM Dev Tools - clang, clangd, lldb
--------------------------------------------------------------------------------

$ cd ~/dev/cloned
$ git clone https://github.com/llvm/llvm-project.git && cd llvm-project
$ mkdir build && cd build
$ cmake -G Ninja -DLLVM_ENABLE_PROJECTS="clang;lldb;clang-tools-extra" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ../llvm
$ ninja
$ sudo ninja install

--------------------------------------------------------------------------------
--                            Known bugs / issues
--------------------------------------------------------------------------------

Brave 
  - Video fullscreen spilling out of screen when window not previously maximized
      https://www.reddit.com/r/kde/comments/1dg33mg/fullscreen_invading_other_monitor/

KZones
  - Sometimes places windows a pixels out of alignment
  - Sometimes breaks window resize zones

--------------------------------------------------------------------------------
--                                 TODO
--------------------------------------------------------------------------------

Pick and install calculator
  https://askubuntu.com/questions/1078571/powerful-gui-calculator-for-linux

Setup bash prompt
  https://www.youtube.com/watch?v=0phdCAFFicY&list=PLhJQdULc4pyWR-u84ATOcNdG72ynrzls3&index=8

Investigate Exquisite as an alternative to KZones?
  https://github.com/qewer33/Exquisite

Migrate from 1Password to free open source alternative?