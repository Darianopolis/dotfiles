--------------------------------------------------------------------------------
--                         Initial environment setup
--------------------------------------------------------------------------------

$ loadkeys uk
$ timedatectl

--------------------------------------------------------------------------------
--                               Drive setup
--------------------------------------------------------------------------------

$ fdisk /dev/nvme0n1
  g
  n
  Enter *2
  +1G
  t
  1
  n
  Enter *3
$ mkfs.fat -F32 /dev/nvme0n1p1
$ mkfs.ext4 /dev/nvme0n1p2

--------------------------------------------------------------------------------
--                             Bootstrap Arch
--------------------------------------------------------------------------------

$ mount /dev/nvme0n1p2 /mnt
$ mount --mkdir /dev/nvme0n1p1 /mnt/boot
$ pacstrap -K /mnt base base-devel linux linux-firmware amd-ucode grub efibootmgr sudo wget vim less code cmake ninja meson flatpak
$ genfstab -U /mnt >> /mnt/etc/fstab
$ arch-chroot /mnt

--------------------------------------------------------------------------------
--                      Configure locale persistently
--------------------------------------------------------------------------------

$ ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
$ systemctl enable systemd-timesyncd.service
$ hwclock --systohc

$ echo "en_US.UTF-8 UTF-8
  en_GB.UTF-8 UTF-8" > /etc/locale.gen
$ locale-gen
$ echo "LANG=en_GB.UTF-8" > /etc/locale.conf
$ echo "KEYMAP=uk" > /etc/vconsole.conf

--------------------------------------------------------------------------------
--                            GRUB Bootloader
--------------------------------------------------------------------------------

$ mount --mkdir /dev/nvme0n1p1 /mnt/boot
$ grub-install --target=x86_64-efi --efi-directory=/boot bootloader-id=GRUB
$ grub-mkconfig -o /boot/grub/grub.cfg

--------------------------------------------------------------------------------
--                                Users
--------------------------------------------------------------------------------

$ passwd
  ...

$ useradd -m -g users -G wheel -s /bin/bash darian
$ passwd darian
  ...

$ visudo
  Uncomment:
  %wheel ALL=(ALL:ALL) NOPASSWD: ALL

# Reduce lockout time to 5s
> /etc/security/faillock.conf
! Change `# unlock_time = 600` to `unlock_time = 5`

--------------------------------------------------------------------------------
--                                Networking
--------------------------------------------------------------------------------

$ echo "darian" > /etc/hostname
$ systemctl enable systemd-networkd.service
$ systemctl enable systemd-resolved.service
$ sudo ln -fs /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
$ sudo nano /etc/systemd/network/20-wired.network
```
[Match]
Name=%NameOfNetworkAdapterFrom`networkctl`
  
[Network]
DHCP=yes
```

--------------------------------------------------------------------------------
--                           SysRq shortcut Enable
--------------------------------------------------------------------------------

echo "kernel.sysrq=1" > /etc/sysctl.d/99-sysctl.conf

--------------------------------------------------------------------------------
--                                GPG Keys
--------------------------------------------------------------------------------

$ sudo pacman -S pass
$ gpg --gen-key
$ gpg --export-secret-keys | gpg2 --import
$ pass init <gpg-id>
! <gpg-id> is the long string of characters from the key as shown by `gpg --list-keys`

--------------------------------------------------------------------------------
--                                  Git
--------------------------------------------------------------------------------

-- Manual (lightest instal)
! Replace 2.5.0 with current latest version
$ curl -OL https://github.com/git-ecosystem/git-credential-manager/releases/2.5.0/download/gcm-linux_amd64.2.5.0.tar.gz
$ sudo tar -xvf gcm-linux_amd64.2.5.0.tar.gz -C /usr/local/bin
$ rm gcm-linux_amd64.2.5.0.tar.gz

-- Automatic (installs a bunch of extra stuff)
$ curl -L https://aka.ms/gcm/linux-install-source.sh | sh

git-credential-manager configure
export GCM_CREDENTIAL_STORE=cache

git config --global credential.credentialStore gpg
git config --global core.editor "nano"
git config --global user.name "Darianopolis"
git config --global user.email "darianopolis@gmail.com

--------------------------------------------------------------------------------
--                         Setup yay AUR helper
--------------------------------------------------------------------------------

! <https://itsfoss.com/install-yay-arch-linux/>
$ sudo pacman -S base-devel git
$ git clone https://aur.archlinux.org/yay.git
$ cd yay
$ makepkg -si
$ cd ..
$ rm -rf yay

--------------------------------------------------------------------------------
--                 Enable multilib for 32 bit applications
--------------------------------------------------------------------------------

$ sudo nano /etc/pacman.conf
-- Uncomment the following
  [multilib]
  Include = /etc/pacman.d/mirrorlist

--------------------------------------------------------------------------------
--                           NVIDIA beta drivers
--------------------------------------------------------------------------------

-- Remove old drivers if necessary
$ sudo yay -Rd --nodeps nvidia-dkms nvidia-utils lib32-nvidia-utils
-- `--nodeps` is used so Steam doesn't complain about having its dependencies removed.

$ sudo yay -S nvidia-beta-dkms nvidia-utils-beta lib32-nvidia-utils-beta

-- See <https://wiki.hyprland.org/Nvidia/>
-- To fix wayland compositors crashing on launch

-- See<https://wiki.archlinux.org/title/NVIDIA/Tips_and_tricks#Preserve_video_memory_after_suspend>
-- To fix system corruption on sleep/resume

$ sudo pacman -S linux-headers egl-wayland

> /etc/default/grub
-- add `nvidia_drm.modeset=1 nvidia.NVreg_PreserveVideoMemoryAllocations=1` to the end of `GRUB_CMDLINE_LINUX_DEFAULT=`
  GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet nvidia_drm.modeset=1 nvidia.NVreg_PreserveVideoMemoryAllocations=1"

$ sudo grub-mkconfig -o /boot/grub/grub.cfg

> /etc/mkinitcpio.conf
-- add `nvidia nvidia_modeset nvidia_uvm nvidia_drm` to MODULES
  MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)

-- remove `kms` from `HOOKS` as per https://wiki.archlinux.org/title/NVIDIA > Installation > Step 5
-- (this avoids dragging in the nouveau module just to be blacklisted later anyway)
-- E.g BEFORE removal: HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block filesystems fsck)
  HOOKS=(base udev autodetect microcode modconf keyboard keymap consolefont block filesystems fsck)

$ sudo mkinitcpio -P

$ sudo systemctl enable nvidia-suspend.service
$ sudo systemctl enable nvidia-resume.service
-- $ sudo systemctl enable nvidia-hibernate.service

--------------------------------------------------------------------------------
--                              Pipewire audio
--------------------------------------------------------------------------------

$ sudo pacman -S pipewire lib32-pipewire wireplumber pipewire-alsa pipewire-pulse pipewire-jack

--------------------------------------------------------------------------------
--                                   KDE
--------------------------------------------------------------------------------

$ sudo pacman -S plasma-meta
-- TODO: Minimal plasma-desktop install?
-- Create a launch script
> ~/plasma
  #!/bin/bash
  /usr/lib/plasma-dbus-run-session-if-needed /usr/bin/startplasma-wayland
$ chmod +x ~/plasma

-- KZones: <https://github.com/SinanAkkoyun/kde-kzone>
! KWin Script > Get New > KZones
! KZones properties:
  ! Untick: `Remember and restore window geometries`
  ! Set layout to contents of <kzones.layout.json>

-- use qt5 pinentry program so that KWallet doesn't crash
-- TODO: Use alternative wallet?
-- TODO: Fallback gpg-agent for TTY
$ echo "pinentry-program /usr/bin/pinentry-qt5" > ~/.gnupg/gpg-agent.conf
$ echo RELOADAGENT | gpg-connect-agent
! see also <https://d.sb/2016/11/gpg-inappropriate-ioctl-for-device-errors>

--------------------------------------------------------------------------------
--                             Common Flatpaks
--------------------------------------------------------------------------------

$ flatpak install flathub com.discordapp.Discord
$ flatpak install flathub com.brave.Browser
$ flatpak install flathub com.obsproject.Studio
$ flatpak install flathub com.spotify.Client

--------------------------------------------------------------------------------
--                                 Browser
--------------------------------------------------------------------------------

New Tab
  Customisepacman install specific package within group
    Background images: Disable

Settings
  Appearance
    ToolBar
      Disable "Show Brave News Button"
      Disable "Show Brave Rewards Button"
      Disable "Show Brave Wallet Button"
      Disable "Show sidebar button"
      Disable "Leo AI assistant"
    Sidebar
      Set "Show Sidebar" to "Never"
  Search Engine
    DuckDuckGo

Add the following extensions
  1Password
  DeArrow - Better Titles and thumbnails
    Replace Thumbnails  - Unchecked (we remove them anyway)
    Title Format        - Disabled (unnecessary title reformatting clutters DeArrow flagged contents)
    Remove Emojis       - Ditto
  Enhancer for YouTube
  Hide YouTube Shorts
  Hide YouTube thumbnails
  Return YouTube Dislikes
  SponsorBlock for YouTube - Skip Sonsorships

--------------------------------------------------------------------------------
--                               Setup Kitty
--------------------------------------------------------------------------------

-- https://starship.rs/

$ sudo pacman -S kitty fastfetch starship otf-firamono-nerd

! List available fonts
$ kitty +list-fonts --ps-names

! Kitty > Ctrl-Shift-F2 
! set font_family
  font_family FiraCode Nerd Font Mono Reg
  background #0a0a0a
  background_opacity 0.90

! Add `eval "$(starship init bash)"` to ~/.bashrc
! Add `fastfetch` to ~/.bashrc

-- Blesh auto suggestions <https://github.com/akinomyoga/ble.sh>
$ yay -S blesh
> ~/.blerc
  Copy contents from  <https://github.com/akinomyoga/ble.sh/blob/master/blerc.template>
! Add `source /usr/share/blesh/ble.sh` to ~/.bashrc

--------------------------------------------------------------------------------
--                           USB Debugging Utilities
--------------------------------------------------------------------------------

$ sudo pacman -S evtest joyutils game-devices-udev
-- joyutils for `jstest`
-- TODO: Figure out why joysticks aren't accessible within xorg session?

--------------------------------------------------------------------------------
--                           UDev Configuration
--------------------------------------------------------------------------------

yay -S game-devices-udev

--------------------------------------------------------------------------------
--                           Wooting Keyboard Setup
--------------------------------------------------------------------------------

> /etc/udev/rules.d/70-wooting.rules
```
# Wooting One Legacy
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff01", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff01", TAG+="uaccess"

# Wooting One update mode
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2402", TAG+="uaccess"

# Wooting Two Legacy
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff02", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="ff02", TAG+="uaccess"

# Wooting Two update mode
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="03eb", ATTRS{idProduct}=="2403", TAG+="uaccess"

# Generic Wootings
SUBSYSTEM=="hidraw", ATTRS{idVendor}=="31e3", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="31e3", TAG+="uaccess"
```
$ sudo udevadm control --reload-rules && sudo udevadm trigger

--------------------------------------------------------------------------------
--                             Steam + Proton GE
--------------------------------------------------------------------------------

$ sudo pacman -S steam
$ mkdir ~/.steam/root/compatibilitytools.d
! Download latest release from <https://github.com/GloriousEggroll/proton-ge-custom/releases>
$ tar -xf GE-Proton9.7.tar.gz -C ~/.steam/root/compatibilitytools.d/
! Restart Steam to udpate Proton versions

--------------------------------------------------------------------------------
--                                ExpressVPN
--------------------------------------------------------------------------------

$ yay -S expressvpn
$ sudo systemctl enable expressvpn
$ sudo systemctl start expressvpn
$ expressvpn preferences set network_lock off
$ expressvpn activate
$ expressvpn connect

--------------------------------------------------------------------------------
--                                 1Password
--------------------------------------------------------------------------------

$ yay -S 1password

--------------------------------------------------------------------------------
--                  Dev Tools - clang, clangd, lldb, scc
--------------------------------------------------------------------------------

$ cd ~/dev/cloned
$ git clone https://github.com/llvm/llvm-project.git && cd llvm-project
$ mkdir build && cd build
$ cmake -G Ninja -DLLVM_ENABLE_PROJECTS="clang;lldb;clang-tools-extra" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ../llvm
$ ninja
$ sudo ninja install

$ sudo pacman -S go
$ go install github.com/boyter/scc@master

--------------------------------------------------------------------------------
--                                Vulkan dev
--------------------------------------------------------------------------------

$ sudo pacman -S vulkan-devel

$ git clone https://github.com/SaschaWillems/VulkanCapsViewer.git --recursive
$ cd VulkanCapsViewer
$ qmake -config release DEFINES+=WAYLAND
$ make

--------------------------------------------------------------------------------
--                                 wlroots
--------------------------------------------------------------------------------

$ git clone https://gitlab.freedesktop.org/wlroots/wlroots.git &&
$ cd wlroots
! play package whackamole until everything is buildable
$ sudo pacman -S wayland-protocols seatd libliftoff xcb-util-errors
$ meson setup --reconfigure build/
$ ninja -C build
$ sudo ninja -C build/ install

--------------------------------------------------------------------------------
--                            Known bugs / issues
--------------------------------------------------------------------------------

Brave 
  - Video fullscreen spilling out of screen when window not previously maximized
      https://www.reddit.com/r/kde/comments/1dg33mg/fullscreen_invading_other_monitor/

KZones
  - Sometimes places windows a pixels out of alignment
  - Sometimes breaks window resize zones

--------------------------------------------------------------------------------
--                                 TODO
--------------------------------------------------------------------------------

Pick and install calculator
  https://askubuntu.com/questions/1078571/powerful-gui-calculator-for-linux

Setup bash prompt
  https://www.youtube.com/watch?v=0phdCAFFicY&list=PLhJQdULc4pyWR-u84ATOcNdG72ynrzls3&index=8

Investigate Exquisite as an alternative to KZones?
  https://github.com/qewer33/Exquisite

Migrate from 1Password to free open source alternative?